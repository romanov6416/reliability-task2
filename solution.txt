1. (1 балл) Оценить размер множества потенциальных состояний программы. Ответ обосновать.
ОТВЕТ:
    Всего в программе потенциально 204 * 2^288 состояний.
ОБОСНОВАНИЕ:
    Пронумеруем строки в программе следующим образом:
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
    int h;
    void
    f (int a, int b)
    {
0:      int x, y;
1:      x = 8;
2:      y = 4;
3:      h = b;
4:      if (h > x + y)
        {
5:          x = 10;
        }
6:      if (h < b - y)
        {
7:          h = y;
        }
8:      if (y > 7)
        {
9:         h = y + b;
        }
        else
        {
10:         h = x;
        }
11: }

    void
    g (int a, int b)
    {
0:      int x, y;
1:      x = 6;
2:      y = 3;
3:      h = 1;
4:      x = 9;
5:      if (h > x + b)
        {
6:          h = 4;
        }
7:      if (h > 5)
        {
8:          h = 3;
        }
9:      y = 0;
10:     while (x < 3)
        {
11:         if (h > 0)
12:             break;
13:         y = 7;
14:         x = 5;
15:         h = 3;
        }
16: }
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

    В задании-программе присутсвует 9 переменных: h, f_a, f_b, f_x, f_y, g_a, g_b, g_x, g_y.
    Всего 9 переменных типа "int". Количество значений в типе "int" равно 2^32.
    В процессе P_f присутствует 12 операторов. В процессе P_g присутствует 17 операторов.
    Следовательно, потенциальное количество состояний в программе равно
        12 * 17 * (2^32)^9 = 204 * 2^288.

###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################

2. (2 балла) Оценить размер множества достижимых состояний программы. Ответ обосновать. В
обосновании описать множество достижимых состояний с помощью линейных равенств и
неравенств на языке C.
ОТВЕТ:
    Всего в программе количетсво потенциально достижимых состояний равно 1056 * 2^160
ОБОСНОВАНИЕ:
    В программе может параллельно выполняться две функции f и g. Это означает, что надо
    учитывать всевозможные порядки выполнения операторов программы. Разметим программу с
    учетом вышесказанного замечания:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    int h;
    void
    f (int a, int b)
    {
0:      int x, y;           // h = {#, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1)
1:      x = 8;              // h = {#, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {#}, f_y = {#}
2:      y = 4;              // h = {#, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8}, f_y = {#}
3:      h = b;              // h = {#, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8}, f_y = {4}
4:      if (h > x + y)      // h = {f_b: -2^31 <= f_b <= 2^31-1, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8}, f_y = {4}
        {
5:          x = 10;         // h = {f_b: -2^31 <= f_b <= 2^31-1}, (-2^31 <= f_a <= 2^31-1), (13 <= f_b <= 2^31-1), f_x = {8}, f_y = {4}
        }
6:      if (h < b - y)      // h = {f_b: -2^31 <= f_b <= 2^31-1, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8, 10}, f_y = {4}
        {
7:          h = y;          // h = {1, 3, 4},  (-2^31 <= f_a <= 2^31-1), (6 <= f_b <= 2^31-1), f_x = {8, 10}, f_y = {4}
        }
8:      if (y > 7)          // h = {f_b: -2^31 <= f_b <= 2^31-1, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8, 10}, f_y = {4}
        {
9:         h = y + b;       // недостижимо, так как f_y = {4} и (f_y > 7) не выполняется
        }
        else
        {
10:         h = x;          // h = {f_b: -2^31 <= f_b <= 2^31-1, 1, 3, 4}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8, 10}, f_y = {4}
        }
11: }                       // h = {f_b: -2^31 <= f_b <= 2^31-1, 1, 3, 4, 8, 10}, (-2^31 <= f_a <= 2^31-1), (-2^31 <= f_b <= 2^31-1), f_x = {8, 10}, f_y = {4}

    void
    g (int a, int b)
    {
0:      int x, y;           // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1)
1:      x = 6;              // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {#}, g_y = {#}
2:      y = 3;              // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {6}, g_y = {#}
3:      h = 1;              // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {6}, g_y = {3}
4:      x = 9;              // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {6}, g_y = {3}
5:      if (h > x + b)      // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {3}
        {
6:          h = 4;          // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {3}
        }
7:      if (h > 5)          // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {3}
        {
8:          h = 3;          // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {3}
        }
9:      y = 0;              // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {3}
10:     while (x < 3)       // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {0}
        {
11:         if (h > 0)      // недостижимо, так как g_x = {9} и (x < 3) не выполняется
12:             break;      // недостижимо, так как g_x = {9} и (x < 3) не выполняется
13:         y = 7;          // недостижимо, так как g_x = {9} и (x < 3) не выполняется
14:         x = 5;          // недостижимо, так как g_x = {9} и (x < 3) не выполняется
15:         h = 3;          // недостижимо, так как g_x = {9} и (x < 3) не выполняется
        }
16: }                       // (-2^31 <= h <= 2^31-1), (-2^31 <= g_a <= 2^31-1), (-2^31 <= g_b <= 2^31-1), g_x = {9}, g_y = {0}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Итак, после первого прохода по функциям f и g выявлены недостижимые участки.
    Так как недостижимые участки не уменьшают количество значений, кооторые могут
    принимать общие переменные программы (глобальная переменная h), то после второго
    прохода по функциям недостижимых участков не прибавится.

    Теперь посчитаем количество значений, которые принимают все переменные в программе:
    (-2^31 <= h <= 2^31-1)      =>  2^32 значений
    (-2^31 <= f_a <= 2^31-1)    =>  2^32 значений
    (-2^31 <= f_b <= 2^31-1)    =>  2^32 значений
    f_x = {8, 10}               =>  2 значения
    f_y = {4}                   =>  1 значения
    (-2^31 <= g_a <= 2^31-1)    =>  2^32 значений
    (-2^31 <= g_b <= 2^31-1)    =>  2^32 значений
    g_x = {6, 9}                =>  2 значения
    g_y = {3, 0}                =>  2 значения

    Теперь посчитаем количество значений, которые принимают счетчики команд:
    c_f = {0, ... , 8, 10, 11)  =>  11 значений
    c_g = {0, ... , 10, 16)     =>  12 значений

    Всего потенциально достижимых состояний:
        2 * 1 * 2 * 2 * (2^32)^5 * 11 * 12 = 1056 * 2^160.